@use './variables.scss' as *;
@use './mixins.scss' as *;
@use 'sass:math';

*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  background-color: $viewport-background-color;
  box-sizing: border-box;
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
}

main {
  @include tablet-landscape-up {
    padding-top: 129.63px;
  }
}

.section {
  $self: &;
  position: relative;
  width: 100%;
  &--fullscreen {
    @extend .section;
    height: calc(100vh - 129.63px);
    #{$self}__wrapper,
    #{$self}__row {
      height: 100%;
    }
  }
  &__wrapper {
    width: 100%;
    max-width: $site-width-extra-large;
    margin: auto;
    padding: 0 32px;
  }
  &__row {
    width: 100%;
    @include flex;
  }
  &__col {
    flex: 1;
    padding: 0 $spacing-24;
    &--flex {
      height: 100%;
      @include flex;
    }
  }
  // &__content {
  //   max-width: 500px;
  //   margin: auto;
  // }
}

.header,
.footer {
  &__wrapper {
    @extend .section__wrapper;
  }
  &__row {
    @extend .section__row;
  }
  &__col {
    @extend .section__col;
  }
}

.visually-hidden,
.visually-hide-label,
.visually-hide-text {
  position: absolute;
  right: 999999999px;
  width: 0;
  height: 0;
  opacity: 0;
}

// ********************* FLEXBOX ********************** //
.flex {
  display: block;
  @include tablet-portrait-up {
    @include flex;
  }
  &--row-reverse {
    @extend .flex;
    @include tablet-portrait-up {
      @include flex($dir: row-reverse);
    }
  }
  &--col {
    @extend .flex;
    @include tablet-portrait-up {
      @include flex($dir: column);
    }
  }
  &--col-reverse {
    @extend .flex;
    @include tablet-portrait-up {
      @include flex($dir: column-reverse);
    }
  }
  &--space-between {
    @extend .flex;
    @include tablet-portrait-up {
      @include flex($justify: space-between);
    }
  }
  &--align-top {
    @extend .flex;
    @include tablet-portrait-up {
      @include flex($align: flex-start);
    }
  }
}

// ********************* GRID ********************** //
// .grid {
//   @for $i from 1 through 5 {
//     &--#{$grid-space * $i} {
//       grid-template-columns: repeat(auto-fill, minmax($grid-space * $i, 1fr));
//       grid-template-rows: repeat(auto-fill, minmax($grid-space * $i, 1fr));
//     }
//   }
//   &--column {
//     grid-auto-flow: column;
//   }
// }

// ********************* LAYOUT MODIFIERS ********************** //
.padding {
  @each $position in $positions {
    &--#{$position} {
      @each $size in $sizes {
        &-#{$size} {
          padding-#{$position}: $size;
        }
      }
    }
  }
}
.margin {
  @each $position in $positions {
    &--#{$position} {
      @each $size in $sizes {
        &-#{$size} {
          margin-#{$position}: $size;
        }
      }
    }
  }
}
